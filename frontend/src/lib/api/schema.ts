/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/users/{username}/notes/{noteId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["getNote"];
    put: operations["updateNote"];
    post?: never;
    delete: operations["deleteNote"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/users/{username}/notes": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["allNotes"];
    put?: never;
    post: operations["createNote"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/user-images/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: operations["updateOrCreateUserImage"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/auth/signup": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: operations["signup"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/auth/logout": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: operations["logout"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/auth/login": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: operations["login"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/users": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["listUsers"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/users/{username}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["getUser"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/users/me": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["getMe"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/user-images/{imageId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["getUserImage"];
    put?: never;
    post?: never;
    delete: operations["delete"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/note-images/{imageId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["getNoteImage"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    ProblemDetail: {
      /** Format: uri */
      type?: string;
      title?: string;
      /** Format: int32 */
      status?: number;
      detail?: string;
      /** Format: uri */
      instance?: string;
      properties?: {
        [key: string]: Record<string, never>;
      };
    };
    NoteImageRequest: {
      /** Format: uuid */
      id?: string;
      altText?: string;
      /** Format: binary */
      file?: string;
    };
    NoteRequest: {
      title: string;
      content: string;
      images?: components["schemas"]["NoteImageRequest"][];
    };
    Note: {
      /** Format: date-time */
      createdAt: string;
      /** Format: date-time */
      updatedAt: string;
      /** Format: uuid */
      id?: string;
      title: string;
      content: string;
      owner: components["schemas"]["User"];
      images?: components["schemas"]["NoteImage"][];
    };
    NoteImage: {
      /** Format: date-time */
      createdAt: string;
      /** Format: date-time */
      updatedAt: string;
      /** Format: uuid */
      id?: string;
      altText: string;
      contentType: string;
      note: components["schemas"]["Note"];
    };
    Permission: {
      /** Format: date-time */
      createdAt: string;
      /** Format: date-time */
      updatedAt: string;
      /** Format: uuid */
      id?: string;
      action: string;
      entity: string;
      access: string;
      description: string;
      roles?: components["schemas"]["Role"][];
      authority?: string;
    };
    Role: {
      /** Format: date-time */
      createdAt: string;
      /** Format: date-time */
      updatedAt: string;
      /** Format: uuid */
      id?: string;
      name: string;
      description: string;
      users?: components["schemas"]["User"][];
      permissions: components["schemas"]["Permission"][];
    };
    User: {
      /** Format: date-time */
      createdAt: string;
      /** Format: date-time */
      updatedAt: string;
      /** Format: uuid */
      id?: string;
      email: string;
      username: string;
      name: string;
      notes?: components["schemas"]["Note"][];
      image?: components["schemas"]["UserImage"];
      roles: components["schemas"]["Role"][];
    };
    UserImage: {
      /** Format: date-time */
      createdAt: string;
      /** Format: date-time */
      updatedAt: string;
      /** Format: uuid */
      id?: string;
      altText?: string;
      contentType: string;
      /** Format: byte */
      blob: string;
      user?: components["schemas"]["User"];
    };
    SignupRequest: {
      username: string;
      name: string;
      email: string;
      password: string;
      confirmPassword: string;
      agreeToTermsOfServiceAndPrivacyPolicy?: boolean;
    };
    AuthUserDto: {
      roles?: components["schemas"]["RoleSummary"][];
      name?: string;
      /** Format: uuid */
      id: string;
      username: string;
      image?: components["schemas"]["UserImageSummary"];
      email: string;
    };
    AuthUserResponse: {
      user?: components["schemas"]["AuthUserDto"];
    };
    PermissionSummary: {
      access?: string;
      action?: string;
      entity?: string;
    };
    RoleSummary: {
      name?: string;
      permissions?: components["schemas"]["PermissionSummary"][];
    };
    UserImageSummary: {
      /** Format: uuid */
      id: string;
      /** Format: date-time */
      updatedAt: string;
    };
    LoginRequest: {
      username: string;
      password: string;
      remember?: boolean;
    };
    UserFilteredResponse: {
      name?: string;
      /** Format: uuid */
      id: string;
      username: string;
      /** Format: uuid */
      imageId?: string;
    };
    UserSummaryResponse: {
      /** Format: date-time */
      createdAt: string;
      /** Format: date-time */
      updatedAt: string;
      name?: string;
      /** Format: uuid */
      id: string;
      username: string;
      image?: components["schemas"]["UserImageSummary"];
      email: string;
    };
    NoteSummary: {
      title: string;
      /** Format: uuid */
      id: string;
    };
    UserNotesResponse: {
      notes: components["schemas"]["NoteSummary"][];
      name?: string;
      /** Format: uuid */
      id: string;
      username: string;
      image?: components["schemas"]["UserImageSummary"];
      email: string;
    };
    NoteSummaryResponse: {
      title: string;
      /** Format: uuid */
      id: string;
      content: string;
      owner: components["schemas"]["OwnerSummary"];
      images: components["schemas"]["NoteImage"][];
      /** Format: date-time */
      updatedAt: string;
    };
    OwnerSummary: {
      /** Format: uuid */
      id: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
  getNote: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        noteId: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["NoteSummaryResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
      /** @description Not Found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
    };
  };
  updateNote: {
    parameters: {
      query: {
        newNote: components["schemas"]["NoteRequest"];
      };
      header?: never;
      path: {
        username: string;
        noteId: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["Note"];
        };
      };
      /** @description Bad Request */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
      /** @description Not Found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
    };
  };
  deleteNote: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        username: string;
        noteId: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Bad Request */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
      /** @description Not Found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
    };
  };
  allNotes: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        username: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["UserNotesResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
      /** @description Not Found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
    };
  };
  createNote: {
    parameters: {
      query: {
        note: components["schemas"]["NoteRequest"];
      };
      header?: never;
      path: {
        username: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["Note"];
        };
      };
      /** @description Bad Request */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
      /** @description Not Found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
    };
  };
  updateOrCreateUserImage: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": {
          /** Format: binary */
          image: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
      /** @description Not Found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
    };
  };
  signup: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SignupRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["AuthUserResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
      /** @description Not Found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
    };
  };
  logout: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Bad Request */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
      /** @description Not Found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
    };
  };
  login: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["LoginRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["AuthUserResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
      /** @description Not Found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
    };
  };
  listUsers: {
    parameters: {
      query?: {
        filter?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["UserFilteredResponse"][];
        };
      };
      /** @description Bad Request */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
      /** @description Not Found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
    };
  };
  getUser: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        username: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["UserSummaryResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
      /** @description Not Found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
    };
  };
  getMe: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["AuthUserResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
      /** @description Not Found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
    };
  };
  getUserImage: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        imageId: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": string;
        };
      };
      /** @description Bad Request */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
      /** @description Not Found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
    };
  };
  delete: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        imageId: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Bad Request */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
      /** @description Not Found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
    };
  };
  getNoteImage: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        imageId: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": string;
        };
      };
      /** @description Bad Request */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
      /** @description Not Found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ProblemDetail"];
        };
      };
    };
  };
}
