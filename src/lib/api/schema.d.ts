/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/users/{username}/notes/{noteId}": {
    get: operations["oneNote"];
    put: operations["replaceNote"];
    delete: operations["deleteNote"];
  };
  "/users/{username}/notes": {
    get: operations["allNotes"];
    post: operations["newNote"];
  };
  "/auth/signup": {
    post: operations["signup"];
  };
  "/auth/logout": {
    post: operations["logout"];
  };
  "/auth/login": {
    post: operations["login"];
  };
  "/users": {
    get: operations["filteredUsers"];
  };
  "/users/{username}": {
    get: operations["oneUser"];
  };
  "/user-images/{imageId}": {
    get: operations["oneUserImage"];
  };
  "/note-images/{imageId}": {
    get: operations["oneNoteImage"];
  };
  "/auth/user": {
    get: operations["authUser"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    NoteImageRequest: {
      /** Format: uuid */
      id?: string;
      altText?: string;
      /** Format: binary */
      file?: string;
    };
    NoteRequest: {
      title: string;
      content: string;
      images?: components["schemas"]["NoteImageRequest"][];
    };
    NoteUsernameAndIdResponse: {
      /** Format: uuid */
      id: string;
      username: string;
    };
    SignupRequest: {
      username: string;
      name: string;
      email: string;
      password: string;
      confirmPassword: string;
      agreeToTermsOfServiceAndPrivacyPolicy?: boolean;
      passwordsMatch?: boolean;
    };
    AuthUserResponse: {
      user?: components["schemas"]["UserAuthDto"];
    };
    PermissionSummary: {
      access?: string;
      action?: string;
      entity?: string;
    };
    RoleSummary: {
      name?: string;
      permissions?: components["schemas"]["PermissionSummary"][];
    };
    UserAuthDto: {
      roles?: components["schemas"]["RoleSummary"][];
      name?: string;
      /** Format: uuid */
      id: string;
      username: string;
      image?: components["schemas"]["UserImageSummary"];
    };
    UserImageSummary: {
      /** Format: uuid */
      id: string;
    };
    LoginRequest: {
      username: string;
      password: string;
      remember?: boolean;
    };
    UserFilteredResponse: {
      name?: string;
      /** Format: uuid */
      id: string;
      username: string;
      /** Format: uuid */
      imageId?: string;
    };
    UserSummaryResponse: {
      /** Format: date-time */
      createdAt: string;
      name?: string;
      /** Format: uuid */
      id: string;
      username: string;
      image?: components["schemas"]["UserImageSummary"];
    };
    NoteSummary: {
      title: string;
      /** Format: uuid */
      id: string;
    };
    UserNotesResponse: {
      notes: components["schemas"]["NoteSummary"][];
      name?: string;
      /** Format: uuid */
      id: string;
      username: string;
      image?: components["schemas"]["UserImageSummary"];
    };
    NoteImageSummary: {
      /** Format: uuid */
      id: string;
      altText?: string;
    };
    NoteSummaryResponse: {
      title: string;
      /** Format: uuid */
      id: string;
      content: string;
      owner: components["schemas"]["OwnerSummary"];
      images: components["schemas"]["NoteImageSummary"][];
      /** Format: date-time */
      updatedAt: string;
    };
    OwnerSummary: {
      /** Format: uuid */
      id: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  oneNote: {
    parameters: {
      path: {
        noteId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["NoteSummaryResponse"];
        };
      };
    };
  };
  replaceNote: {
    parameters: {
      query: {
        newNote: components["schemas"]["NoteRequest"];
      };
      path: {
        username: string;
        noteId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["NoteUsernameAndIdResponse"];
        };
      };
    };
  };
  deleteNote: {
    parameters: {
      path: {
        username: string;
        noteId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  allNotes: {
    parameters: {
      path: {
        username: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["UserNotesResponse"];
        };
      };
    };
  };
  newNote: {
    parameters: {
      query: {
        note: components["schemas"]["NoteRequest"];
      };
      path: {
        username: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["NoteUsernameAndIdResponse"];
        };
      };
    };
  };
  signup: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["SignupRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["AuthUserResponse"];
        };
      };
    };
  };
  logout: {
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  login: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["LoginRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["AuthUserResponse"];
        };
      };
    };
  };
  filteredUsers: {
    parameters: {
      query?: {
        filter?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["UserFilteredResponse"][];
        };
      };
    };
  };
  oneUser: {
    parameters: {
      path: {
        username: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["UserSummaryResponse"];
        };
      };
    };
  };
  oneUserImage: {
    parameters: {
      path: {
        imageId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  oneNoteImage: {
    parameters: {
      path: {
        imageId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  authUser: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["AuthUserResponse"];
        };
      };
    };
  };
}
