/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as IndexImport } from './routes/index'
import { Route as UsersIndexImport } from './routes/users/index'
import { Route as UsersUsernameIndexImport } from './routes/users/$username/index'
import { Route as UsersUsernameNotesLayoutImport } from './routes/users/$username/_notesLayout'
import { Route as UsersUsernameNotesLayoutNotesIndexImport } from './routes/users/$username/_notesLayout/notes.index'
import { Route as UsersUsernameNotesLayoutNotesNewImport } from './routes/users/$username/_notesLayout/notes.new'
import { Route as UsersUsernameNotesLayoutNotesNoteIdImport } from './routes/users/$username/_notesLayout/notes.$noteId'
import { Route as UsersUsernameNotesLayoutNotesNoteIdEditImport } from './routes/users/$username/_notesLayout/notes.$noteId_.edit'

// Create Virtual Routes

const UsersUsernameImport = createFileRoute('/users/$username')()

// Create/Update Routes

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UsersUsernameRoute = UsersUsernameImport.update({
  path: '/users/$username',
  getParentRoute: () => rootRoute,
} as any)

const UsersIndexRoute = UsersIndexImport.update({
  path: '/users/',
  getParentRoute: () => rootRoute,
} as any)

const UsersUsernameIndexRoute = UsersUsernameIndexImport.update({
  path: '/',
  getParentRoute: () => UsersUsernameRoute,
} as any)

const UsersUsernameNotesLayoutRoute = UsersUsernameNotesLayoutImport.update({
  id: '/_notesLayout',
  getParentRoute: () => UsersUsernameRoute,
} as any)

const UsersUsernameNotesLayoutNotesIndexRoute =
  UsersUsernameNotesLayoutNotesIndexImport.update({
    path: '/notes/',
    getParentRoute: () => UsersUsernameNotesLayoutRoute,
  } as any)

const UsersUsernameNotesLayoutNotesNewRoute =
  UsersUsernameNotesLayoutNotesNewImport.update({
    path: '/notes/new',
    getParentRoute: () => UsersUsernameNotesLayoutRoute,
  } as any)

const UsersUsernameNotesLayoutNotesNoteIdRoute =
  UsersUsernameNotesLayoutNotesNoteIdImport.update({
    path: '/notes/$noteId',
    getParentRoute: () => UsersUsernameNotesLayoutRoute,
  } as any)

const UsersUsernameNotesLayoutNotesNoteIdEditRoute =
  UsersUsernameNotesLayoutNotesNoteIdEditImport.update({
    path: '/notes/$noteId/edit',
    getParentRoute: () => UsersUsernameNotesLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/users/': {
      preLoaderRoute: typeof UsersIndexImport
      parentRoute: typeof rootRoute
    }
    '/users/$username': {
      preLoaderRoute: typeof UsersUsernameImport
      parentRoute: typeof rootRoute
    }
    '/users/$username/_notesLayout': {
      preLoaderRoute: typeof UsersUsernameNotesLayoutImport
      parentRoute: typeof UsersUsernameRoute
    }
    '/users/$username/': {
      preLoaderRoute: typeof UsersUsernameIndexImport
      parentRoute: typeof UsersUsernameImport
    }
    '/users/$username/_notesLayout/notes/$noteId': {
      preLoaderRoute: typeof UsersUsernameNotesLayoutNotesNoteIdImport
      parentRoute: typeof UsersUsernameNotesLayoutImport
    }
    '/users/$username/_notesLayout/notes/new': {
      preLoaderRoute: typeof UsersUsernameNotesLayoutNotesNewImport
      parentRoute: typeof UsersUsernameNotesLayoutImport
    }
    '/users/$username/_notesLayout/notes/': {
      preLoaderRoute: typeof UsersUsernameNotesLayoutNotesIndexImport
      parentRoute: typeof UsersUsernameNotesLayoutImport
    }
    '/users/$username/_notesLayout/notes/$noteId/edit': {
      preLoaderRoute: typeof UsersUsernameNotesLayoutNotesNoteIdEditImport
      parentRoute: typeof UsersUsernameNotesLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  LoginRoute,
  UsersIndexRoute,
  UsersUsernameRoute.addChildren([
    UsersUsernameNotesLayoutRoute.addChildren([
      UsersUsernameNotesLayoutNotesNoteIdRoute,
      UsersUsernameNotesLayoutNotesNewRoute,
      UsersUsernameNotesLayoutNotesIndexRoute,
      UsersUsernameNotesLayoutNotesNoteIdEditRoute,
    ]),
    UsersUsernameIndexRoute,
  ]),
])

/* prettier-ignore-end */
